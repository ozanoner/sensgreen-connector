name: Build and test

on:
  workflow_dispatch:
    inputs:
      run_branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'master'
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    if: github.event.pull_request.draft == false || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Inject build secrets
        run: |
          cat <<EOF > examples/esp32_ex/build_secrets.cmake
          set(SECRETS_MQTT_USER "${{ secrets.MQTT_USER }}" CACHE INTERNAL "")
          set(SECRETS_MQTT_PASS "${{ secrets.MQTT_PASS }}" CACHE INTERNAL "")
          set(SECRETS_MQTT_HOST "${{ secrets.MQTT_HOST }}" CACHE INTERNAL "")
          set(SECRETS_MQTT_PORT "${{ secrets.MQTT_PORT }}" CACHE INTERNAL "")
          set(SECRETS_MQTT_TOPIC "${{ secrets.MQTT_TOPIC }}" CACHE INTERNAL "")
          set(SECRETS_DEVICE_UID "${{ secrets.DEVICE_UID }}" CACHE INTERNAL "")
          EOF

      - name: esp-idf build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.4.1
          target: esp32
          path: 'examples/esp32_ex'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            examples/esp32_ex/sdkconfig
            examples/esp32_ex/build/flasher_args.json
        
      - name: Test with Wokwi
        uses: wokwi/wokwi-ci-action@v1
        with:
          token: ${{ secrets.WOKWI_CLI_TOKEN }}
          expect_text: 'MQTT: Connected to broker'
